plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.tennisfolio'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
	implementation("software.amazon.awssdk:s3:2.31.35")
	implementation 'org.apache.tika:tika-core:2.9.0'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'mysql:mysql-connector-java:8.0.33'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
	implementation 'mysql:mysql-connector-java:8.0.33'
	implementation("org.springframework.boot:spring-boot-starter-aop")
	implementation 'org.springframework.boot:spring-boot-starter-webflux' // WebClient
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'com.google.guava:guava:33.2.1-jre'
}
tasks.withType(JavaCompile) {
	options.compilerArgs << "-parameters"
}
tasks.named('test') {
	useJUnitPlatform()
}
