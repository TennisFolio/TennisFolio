services:
  app:
    image: tennisfolio
    container_name: app
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      SPRING_DATA_REDIS_PASSWORD: ${REDIS_PASSWORD}
    ports:
      - "8080:8080"
    volumes:
      - ./src/main/resources/application.properties:/app/application.properties
      - /var/log/tennisfolio:/var/log/tennisfolio
    networks:
      - tennisnet

  nginx:
    image: nginx
    container_name: nginx
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./certs:/etc/letsencrypt
    ports:
      - "80:80"
      - "443:443"
    networks:
      - tennisnet
    depends_on:
      - app

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: [ "redis-server", "--appendonly", "yes", "--requirepass", "${REDIS_PASSWORD}" ]
    networks:
      - tennisnet
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - tennisnet
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - tennisnet
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

volumes:
  grafana_data:
  redis_data: {}

networks:
  tennisnet: