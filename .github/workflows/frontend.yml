name: Frontend CI/CD

on:
  push:
    branches:
      - main
    paths:
      - 'src/tennisFolio/**'
      - '.github/workflows/frontend.yml'

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: src/tennisFolio

    steps:
      - name: git clone
        uses: actions/checkout@v4

      - name: Use Node.js 20 + npm cache
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: src/tennisFolio/package-lock.json
          registry-url: 'https://registry.npmjs.org'

      - name: Debug npm config (before)
        run: |
          npm config ls -l
          npm ping || true
          cat ~/.npmrc || true
          cat .npmrc || true

      - name: Normalize npm registry & auth
        run: |
          npm config set registry https://registry.npmjs.org/
          npm config delete always-auth || true
          npm config delete //registry.npmjs.org/:_authToken || true
          npm config delete //npm.pkg.github.com/:_authToken || true
          
      - name: Clear env tokens that can force auth
        run: |
          echo "NODE_AUTH_TOKEN=" >> $GITHUB_ENV
          echo "NPM_TOKEN=" >> $GITHUB_ENV
          echo "NPM_CONFIG_ALWAYS_AUTH=false" >> $GITHUB_ENV
          echo "NPM_CONFIG_REGISTRY=https://registry.npmjs.org/" >> $GITHUB_ENV

      - name: Debug npm config (after)
        run: |
          npm config ls -l
          npm ping

      - name: Create .env.production
        run : |
          cat > .env.production << 'EOF'
          VITE_BASE_SERVER_URL=${{ secrets.VITE_BASE_SERVER_URL }}
          EOF
          
      - name: Remove lock & install (legacy peer deps)
        run: |
          rm -f package-lock.json
          npm cache clean --force
          npm install --legacy-peer-deps --registry=https://registry.npmjs.org/

      - name: build
        run: CI=false npm run build

      - name: deploy to S3
        env:
          AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"
          AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
        run: |
          aws s3 cp \
            --recursive \
            --region ap-northeast-2 \
            ./dist s3://tennisfolio

      - name: Invalidate CloudFront
        uses: chetan/invalidate-cloudfront-action@v1
        env:
          DISTRIBUTION: ${{ secrets.DISTRIBUTION }}
          PATHS: "/*"
          AWS_REGION: "ap-northeast-2"
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
